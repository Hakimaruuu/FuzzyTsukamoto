# -*- coding: utf-8 -*-
"""IF4210_1301180522_FZ.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TaeTHAqpKgGDE9w6EQ-ziU7FozhrCEmu
"""

import pandas as pd
import matplotlib.pyplot as plt
# RIZKI AMANULLAH HAKIM
# IF4210 - 1301180522

def bacafile (nama):
  # upload file Mahasiswa.xls ke files
  file = pd.read_excel(nama)
  return file

def minimal(a,b):
  if a<b: return a
  else: return b

df = bacafile('Mahasiswa.xls')
hasil  = df['Penghasilan']
keluar = df['Pengeluaran']

def fuz1(hasil):
  # hasil [5,8,11,14]
  i = hasil
  kecil = []; cukup = []; besar = []

  for i in range(20):
    if i >= 14:
      besar.append(1)
    elif i < 11:
      besar.append(0)
    else:
      besar.append((i-11)/(14-11))
    
    if i >= 8:
      kecil.append(0)
    elif i <= 5:
      kecil.append(1)
    else:
      kecil.append((8-i)/(8-5))
    
    if i <= 5 or i >= 14:
      cukup.append(0)
    elif i > 5 and i < 8:
      cukup.append((i-5)/(8-5))
    elif i >= 8 and i <= 11:
      cukup.append(1)
    elif i > 11 and i < 14:
      cukup.append((14-i)/(14-11))
    
  return besar,cukup,kecil

hasil_besar = fuz1(hasil)[0]
hasil_cukup = fuz1(hasil)[1]
hasil_kecil = fuz1(hasil)[2]

def fuz2(keluar):
  i = keluar
  # keluar = [4,6,8,10]
  besar = []; cukup = []; kecil = []

  for i in range(20):
    if i >= 10:
      besar.append(1)
    elif i < 8:
      besar.append(0)
    else:
      besar.append((i-8)/(10-8))
    
    if i >= 6:
      kecil.append(0)
    elif i <= 4:
      kecil.append(1)
    else:
      kecil.append((6-i)/(6-4))
    
    if i <= 4 or i >= 10:
      cukup.append(0)
    elif i > 4 and i < 6:
      cukup.append((6-i)/(6-4))
    elif i >= 6 and i <= 8:
      cukup.append(1)
    elif i > 8 and i < 10:
      cukup.append((10-i)/(10-8)) 
    
  return besar,cukup,kecil

klr_besar = fuz2(keluar)[0]
klr_cukup = fuz2(keluar)[1]
klr_kecil = fuz2(keluar)[2]

def fuz3(minval):
  i = minval
  terima = []; tolak = []; pertimbangan = []
  for i in range(12):
    if i>= 8:
      tolak.append(1)
    elif i < 4:
      tolak.append(0)
    else: 
      tolak.append((i-4)/(8-4))
    
    if i>=8:
      terima.append(0)
    elif i <= 4:
      terima.append(1)
    else:
      terima.append((8-i)/(8-4))
    
    if i <= 4 or i >= 10:
      pertimbangan.append(0)
    elif i > 4 and i < 6:
      pertimbangan.append((6-i)/(6-4))
    elif i == 6:
      pertimbangan.append(1)
    elif i > 6 and i < 8:
      pertimbangan.append((8-i)/(8-6))

  return terima,pertimbangan,tolak

acc = fuz3(min(hasil[0],keluar[0]))[0]
dec = fuz3(min(hasil[0],keluar[0]))[2]

plt.plot(hasil_besar)
plt.plot(hasil_cukup)
plt.plot(hasil_kecil)
print("    -----Grafik penghasilan-----")
plt.show()

plt.plot(klr_besar)
plt.plot(klr_cukup)
plt.plot(klr_kecil)
print("\n    -----Grafik pengeluaran-----")
plt.show()

plt.plot(acc)
plt.plot(dec)
print("\n    -----Grafik bobot penerimaan-----")
plt.show()

# tempat hitung derajat keanggotaan

def fuz1_degree(kat,x):
  if kat =='b':
    if (x >= 14):
      return 1
    elif (x < 11):
      return 0
    else:
      return (x-11)/(14-11)

  elif kat =='c':
    if (x >= 8):
      return 0
    elif (x <= 5):
      return 1
    else:
      return (8-x)/(8-5)

  elif kat =='k':
    if (x <= 5 or x >= 14):
      return 0
    elif (x > 5 and x < 8):
      return ((x-5)/(8-5))
    elif (x >= 8 and x <= 11):
      return 1
    elif (x > 11 and x < 14):
      return (14-x)/(14-11)

def fuz2_degree(kat,x):
  if kat =='b':
    if x >= 10:
      return 1
    elif x < 8:
      return 0
    else:
      return ((x-8)/(10-8))

  elif kat =='c':
    if x >= 6:
      return 0
    elif x <= 4:
      return 1
    else:
      return ((6-x)/(6-4))

  elif kat =='k':
    if x <= 4 or x >= 10:
      return 0
    elif x > 4 and x < 6:
      return ((6-x)/(6-4))
    elif x >= 6 and x <= 8:
      return 1
    elif x > 8 and x < 10:
      return ((10-x)/(10-8))

def fuz3_degree(kat,minval): # atau dapat disebut z val
  if kat == 'b':
    if i>= 8:
      return 1
    elif i < 4:
      return 0
    else: 
      return ((i-4)/(8-4))
  elif kat =='k':
    if i>=8:
      return 0
    elif i <= 4:
      return 1
    else:
      return ((8-i)/(8-4))

# inferensi/ evaluasi rule
id = []; nilai = []; i = 0
while (i<100):
  list_k = []; list_c = []; list_b = []
  # berisi nilai derajat keanggotaan urutan ke-i
  f1_b = fuz1_degree('b',hasil[i]); f2_b = fuz2_degree('b',keluar[i])
  f1_c = fuz1_degree('c',hasil[i]); f2_c = fuz2_degree('c',keluar[i])
  f1_k = fuz1_degree('k',hasil[i]); f2_k = fuz2_degree('k',keluar[i])

  # mengambil nilai alfa predikat
  a_pred1 = minimal(f1_k,f2_k)
  a_pred2 = minimal(f1_k,f2_c)
  a_pred3 = minimal(f1_k,f2_b)
  a_pred4 = minimal(f1_c,f2_k)
  a_pred5 = minimal(f1_c,f2_c)
  a_pred6 = minimal(f1_c,f2_b)
  a_pred7 = minimal(f1_b,f2_k)
  a_pred8 = minimal(f1_b,f2_c)
  a_pred9 = minimal(f1_b,f2_b)

  # mengambil nilai z
  z1 = fuz3_degree('b',a_pred1)
  z2 = fuz3_degree('b',a_pred2)
  z3 = fuz3_degree('b',a_pred3)
  z4 = fuz3_degree('b',a_pred4)
  z5 = fuz3_degree('k',a_pred5)
  z6 = fuz3_degree('k',a_pred6)
  z7 = fuz3_degree('k',a_pred7)
  z8 = fuz3_degree('k',a_pred8)
  z9 = fuz3_degree('k',a_pred9)

  # metode tsukamoto
  z = 0 +(a_pred1*z1)+(a_pred2*z2)+(a_pred3*z3)
  z = z +(a_pred4*z4)+(a_pred5*z5)+(a_pred6*z6)
  z = z +(a_pred7*z7)+(a_pred8*z8)+(a_pred9*z9)
  z = z /(z1+z2+z3+z4+z5+z6+z7+z8+z9)
  nilai.append(z*100)
  id.append(i+1)
  i+=1

  # copas dari internet
def insertionSort(arr,arr2): 
	for i in range(1, len(arr)): 
		key,xyxy = arr[i],arr2[i] 
		j = i-1
		while j >=0 and key > arr[j] : 
				arr[j+1],arr2[j+1] = arr[j],arr2[j] 
				j -= 1
		arr[j+1],arr2[j+1] = key,xyxy

insertionSort(nilai,id)

df = pd.DataFrame(columns=['id'])

newlist = []
for k in range(20):
  newlist.append(nilai[k])
newid = []
for l in range(20):
  m = id[l]
  newline = {'id':m}
  df = df.append(newline, ignore_index=True)

# install dulu : pip install xlwt

df.to_excel("Bantuan.xls", index=None)
print('\nDataFrame is saved as : Bantuan.xls')